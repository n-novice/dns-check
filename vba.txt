Sub SplitByFunctionWithFormatting()

    Dim wsSource As Worksheet
    Dim wbNew As Workbook
    Dim wsNew As Worksheet
    Dim LastRow As Long
    Dim i As Long
    Dim FileLocation As String
    Dim FileName As String
    Dim LastColumn As Long
    Dim r As Long
    Dim c As Long

    ' 画面の更新を無効にします
    Application.ScreenUpdating = False

    ' 入力シートを指定します
    Set wsSource = ThisWorkbook.Sheets("Sheet2")

    ' 入力ファイルが保存されている場所を取得します
    FileLocation = ThisWorkbook.Path & "\"

    ' 最終行と最終列を取得します
    LastRow = wsSource.Cells(wsSource.Rows.Count, 1).End(xlUp).Row
    LastColumn = wsSource.Cells(5, wsSource.Columns.Count).End(xlToLeft).Column

    ' 機能ごとの列をループします（9列目から開始、最終の２列は除く）
    For i = 9 To LastColumn - 2

        ' 新しいワークブックを作成します
        Set wbNew = Workbooks.Add
        Set wsNew = wbNew.Sheets(1)

        ' 既存のシートから説明とヘッダーをコピー
        wsSource.Range("A1:H" & LastRow).Copy wsNew.Range("A1")

        ' 機能列のデータを新しいワークブックの9列目にコピー
        wsSource.Range(wsSource.Cells(1, i), wsSource.Cells(LastRow, i)).Copy wsNew.Cells(1, 9)

        ' 元のファイルの最終列から２列を新しいワークブックの10列目と11列目にコピー
        wsSource.Range(wsSource.Cells(1, LastColumn - 1), wsSource.Cells(LastRow, LastColumn - 1)).Copy wsNew.Cells(1, 10)
        wsSource.Range(wsSource.Cells(1, LastColumn), wsSource.Cells(LastRow, LastColumn)).Copy wsNew.Cells(1, 11)

        ' Copy row heights and column widths
        For r = 1 To LastRow
            wsNew.Rows(r).RowHeight = wsSource.Rows(r).RowHeight
        Next r

        For c = 1 To 11 ' 11列までの幅をコピー
            wsNew.Columns(c).ColumnWidth = wsSource.Columns(c).ColumnWidth
        Next c

        ' A1セルを選択
        wsNew.Range("A1").Select

        ' 新しいワークブックのファイル名を設定します
        FileName = CleanFileName(wsNew.Cells(5, 9).Value) & ".xlsx"

        ' 新しいワークブックを保存します
        wbNew.SaveAs FileLocation & FileName, FileFormat:=xlOpenXMLWorkbook

        ' 新しいワークブックを閉じます
        wbNew.Close

    Next i

    ' クリップボードをクリアします
    Application.CutCopyMode = False

    ' 画面の更新を再開します
    Application.ScreenUpdating = True

End Sub

' ファイル名として使用できない文字を取り除くヘルパー関数
Function CleanFileName(ByVal s As String) As String
    Dim InvalidChars As String
    Dim i As Integer
    InvalidChars = "\/:*?""<>|" & Chr(10) & Chr(13) ' 無効な文字と改行文字を追加
    
    For i = 1 To Len(InvalidChars)
        s = Replace(s, Mid(InvalidChars, i, 1), "")
    Next i

    CleanFileName = s
End Function

